% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anno-.R
\name{new_anno}
\alias{new_anno}
\title{Constructor of AnnotationFunction Class}
\usage{
new_anno(
  n,
  draw_fn,
  ylim = NULL,
  width = NULL,
  height = NULL,
  show_name = TRUE,
  which = NULL,
  name = NULL
)
}
\arguments{
\item{n}{Number of observations in the annotation. It is not mandatory, but it is better to provide this information so that the higher order \code{\link[ComplexHeatmap]{HeatmapAnnotation}} knows it and it can perform check on the consistency of annotations and heatmaps.}

\item{draw_fn}{A function which defines how to draw the annotation. See
\href{https://jokergoo.github.io/ComplexHeatmap-reference/book/heatmap-annotations.html#implement-new-annotation-functions}{ComplexHeatmap Manual}
for details.

The function should have three arguments: \code{index}, \code{k} and \code{n} (the names of
the arguments can be arbitrary) where \code{k} and \code{n} are optional. \code{index}
corresponds to the indices of rows or columns of the heatmap. The value of
\code{index} is not necessarily to be the whole row indices or column indices in
the heatmap. It can also be a subset of the indices if the annotation is
split into slices according to the split of the heatmap. \code{index} is
reordered according to the reordering of heatmap rows or columns (e.g. by
clustering). So, \code{index} actually contains a list of row or column indices
for the current slice after row or column reordering.

k corresponds to the current slice and n corresponds to the total number of
slices.}

\item{ylim}{Ranges of data value on the data axis.}

\item{width}{The width of the plotting region (the viewport) that the annotation is drawn. If it is a row annotation, the width must be an absolute unit. Since the \code{AnnotationFunction} object is always contained by the \code{\link[ComplexHeatmap]{SingleAnnotation-class}}object, you can only set the width of row annotations or height of column annotations, while e.g. the height of the row annotation is always \code{unit(1, "npc")} which means it always fully filled in the parent \code{SingleAnnotation} and only in \code{\link[ComplexHeatmap]{SingleAnnotation}} or even \code{\link[ComplexHeatmap]{HeatmapAnnotation}} can adjust the height of the row annotations.}

\item{height}{The height of the plotting region (the viewport) that the annotation is drawn. If it is a column annotation, the width must be an absolute unit.}

\item{show_name}{It is used to turn off the drawing of annotation names in \code{\link[ComplexHeatmap]{HeatmapAnnotation}}. Annotations always have names associated and normally they will be drawn beside the annotation graphics to tell what the annotation is about. e.g. the annotation names put beside the points annotation graphics. However, for some of the annotations, the names are not necessarily to be drawn, such as text annotations drawn by \code{\link[ComplexHeatmap]{anno_text}} or an empty annotation drawn by \code{\link[ComplexHeatmap]{anno_empty}}. In this case, when \code{show_names} is set to \code{FALSE}, there will be no annotation names drawn for the annotation.}

\item{which}{Whether it is drawn as a column annotation or a row annotation?}

\item{name}{Name of the annotation, only used for message.}
}
\value{
A \code{\link[ComplexHeatmap]{AnnotationFunction-class}} object which can be used in \code{\link[ComplexHeatmap]{HeatmapAnnotation}}.
}
\description{
Constructor of AnnotationFunction Class
}
\details{
\code{new_anno} is similar with
\link[ComplexHeatmap:AnnotationFunction]{AnnotationFunction}, but \code{new_anno}
won't change the function environment of \code{draw_fn}. So it's safe to use
\code{new_anno} in pacakge development, particularly when dealing with internal
functions in the package namespace that are likely to exist. \verb{@subsettable}
will always be set to \code{FALSE}.
}
\examples{
x <- 1:10
anno <- new_anno(
    n = 10,
    draw_fn = function(index, k, n) {
        n <- length(index)
        pushViewport(viewport(xscale = c(0.5, n + 0.5), yscale = c(0, 10)))
        grid.rect()
        grid.points(1:n, x[index], default.units = "native")
        if (k == 1) grid.yaxis()
        popViewport()
    },
    height = unit(2, "cm")
)
m <- rbind(1:10, 11:20)
ggheat(m, top_annotation = HeatmapAnnotation(foo = anno))
ggheat(m, top_annotation = HeatmapAnnotation(foo = anno), column_km = 2)
}
\seealso{
\itemize{
\item \link{new_anno_subset}
\item \link[ComplexHeatmap:AnnotationFunction]{AnnotationFunction}
}
}
