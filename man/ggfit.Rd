% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggfit.R
\name{ggfit}
\alias{ggfit}
\alias{ggfit2}
\title{Fit ggplot2 panel or plot in a viewport}
\usage{
ggfit(gg, align_with = "full", clip = NULL, vp = NULL, gt = NULL)

ggfit2(
  gg,
  align_with = "full",
  margins = c("b", "t", "l", "r"),
  elements = NULL,
  vp = NULL,
  gt = NULL
)
}
\arguments{
\item{gg}{A \link[ggplot2:ggplot]{ggplot2} object.}

\item{align_with}{Which area of the object should be fit to the viewport?
Must be a string of "panel", "plot", "full".}

\item{clip}{One of \code{"on"}, \code{"inherit"}, or \code{"off"}, indicating whether to
clip to the extent out of the viewport, inherit the clipping region from
\code{vp}, or turn clipping off altogether. A logical value of \code{TRUE} corresponds
to \code{"on"} and \code{FALSE} corresponds to \code{"off"}. Default: \code{"inherit"}.}

\item{vp}{A \link[grid:viewport]{viewport} object.}

\item{gt}{A \link[ggplot2:ggplotGrob]{gtable} object.}

\item{margins}{Which margin to draw besides the plot in the \code{vp} viewport.
This allows for a more precise adjustment of the \code{clip} feature. Allowed
values are \code{"t"}, \code{"l"}, \code{"b"}, and \code{"r"}, When set to \code{NULL}, it means clip =
\code{"off"}.}

\item{elements}{Ggplot elements to draw, can be a list of a character to
specify elements for each side separately. Valid elements are
\code{"axis"}, \code{"lab"}, \code{"guide"}, \code{"subtitle"}, \code{"title"}, and \code{"caption"}. Invalid elements will be just omitted. IF
\code{NULL}, all valid ggplot elements will be used.}
}
\value{
Fit ggplot object in the viewport.
\itemize{
\item align_with = \code{"panel"}: Draw ggplot object by fitting exactly the \code{panel}
to \code{vp}.
\item align_with = \code{"plot"}: Draw ggplot object by fitting \code{panel}, \code{axis}, and
\code{lab} in \code{vp}.
\item align_with = \code{"full"}: Draw full ggplot object in \code{vp}.
}
}
\description{
Fit ggplot2 panel or plot in a viewport
}
\examples{
p <- ggplot(data.frame(x = 0:10, y = 0:10), aes(x, y)) +
    geom_point()
outerBox <- viewport(width = unit(125, "mm"), height = unit(150, "mm"))
innerBox <- viewport(
    x = unit(0.5, "npc"), y = unit(0.6, "npc"),
    width = unit(60, "mm"), height = unit(70, "mm"), angle = -30
)

# ggfit-panel: clip = "on" ------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit(p, "panel", clip = "on")

# ggfit-panel: clip = "off" ------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit(p, "panel", clip = "off")

# ggfit-plot -------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit(p, "plot")

# ggfit-full -------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit(p, "full")

# ggfit2-panel: margins = NULL ------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit2(p, "panel", margins = NULL)

# ggfit2-panel: margins = "b" ------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit2(p, "panel", margins = "b")

# ggfit2-panel: margins = "l" ------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit2(p, "panel", margins = "l")

# ggfit2-plot -------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit2(p, "plot")

# ggfit2-full -------------
grid.newpage()
pushViewport(outerBox)
grid.rect(gp = gpar(col = "red", fill = NA))

pushViewport(innerBox)
grid.rect(gp = gpar(col = "red", fill = NA, lwd = 2))
ggfit2(p, "full")
}
